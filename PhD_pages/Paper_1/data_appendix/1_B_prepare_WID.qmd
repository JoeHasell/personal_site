---
title: "Appendix 1.B: Preparing WID inequality data"
format: html
warning: false

---

::: {.callout-note collapse="true" appearance="minimal"}
### Packages and settings

```{python}

import pandas as pd

pd.set_option('display.max_rows', None)
```
:::

::: {.callout-note collapse="true" appearance="minimal"}
### Load WID data
We load the data from a file prepared from the WID Stata package by Our World in Data.

The data was prepared in three separate files according to three income concepts: post_tax disposable income, post_tax national income and pretax national income.

These we append into a single file.

```{python}
# df_wid<- read.csv("https://raw.githubusercontent.com/owid/notebooks/main/BetterDataDocs/PabloArriagada/WID/data/final/wid_pretax.csv")

inc_concepts = [
  'posttax_dis',
  'posttax_nat',
  'pretax'
]

# filepaths = [f'data/original/wid_{inc_concept}.csv' for inc_concept in inc_concepts]

filepaths = [f'https://raw.githubusercontent.com/owid/notebooks/main/BetterDataDocs/PabloArriagada/WID/data/final/wid_{inc_concept}.csv' for inc_concept in inc_concepts]

wid_dfs = [pd.read_csv(filepath) for filepath in filepaths]

df_wid = pd.concat(wid_dfs, keys=inc_concepts)

# Tidy up indexes
df_wid = df_wid.reset_index()

df_wid = df_wid.drop('level_1', axis=1)

df_wid = df_wid\
  .rename(columns={"level_0": "inc_concept"})

```


The resulting dataframe looks like this:
```{python}
df_wid.head(50)
```
:::



::: {.callout-note collapse="true" appearance="minimal"}
### Drop subnational, regional and historical geographical entities

Here we create a list of entities in the WID data that do not correspond to countries in existence today. These we drop from the data.

```{python}

drop_entities =  [
  "China - rural",
  "China - urban",
  "East Germany",
  "Other Russia and Central Asia",
  "Other East Asia",
  "Other Western Europe",
  "Other Latin America",
  "Other MENA",
  "Other South & South-East Asia",
  "Other Sub-Saharan Africa",
  "Africa",
  "Asia",
  "Europe",
  "Oceania",
  "Central Asia",
  "East Africa",
  "East Asia",
  "South Asia",
  "Eastern Europe",
  "Middle Africa",
  "North Africa",
  "North America",
  "South-East Asia",
  "South Africa region",
  "West Africa",
  "West Asia",
  "Western Europe",
  "European Union",
  "World",
  "Asia (excluding Middle East)",
  "North America and Oceania",
  "Sub-Saharan Africa",
  "Latin America",
  "Middle East",
  "MENA",
  "Russia and Central Asia",
  "South & South-East Asia"
]

df_wid = df_wid.loc[~df_wid["Entity"].isin(drop_entities)]

```
:::



::: {.callout-note collapse="true" appearance="minimal"}
### Calculate some additional inequality metrics


```{python}
# Gini as index
df_wid["Gini"] = df_wid['Gini coefficient'] * 100

```

:::


::: {.callout-note collapse="true" appearance="minimal"}
### Rename and select needed variables

```{python}

df_wid = df_wid.rename(columns={
    'P90-P100 - share of the top 10%':'Top_10_share',
    'P0-P50 - share of the bottom 50%':'Bottom_50_share',
    'P99-P100 - share of the top 1%':'Top_1_share'
  })

keep_cols = [
  "Year",
  "Entity",
  "Gini",
  "Top_10_share",
  "Bottom_50_share",
  "inc_concept"
]

df_wid = df_wid[keep_cols]

```
:::

::: {.callout-note collapse="true" appearance="minimal"}
### Pivot the data wider by income concept

```{python}

df_wid = df_wid.set_index(['Year','Entity','inc_concept']).unstack()

df_wid.columns = df_wid.columns.map(lambda x: '{}_{}'.format(x[0], x[1]))

df_wid = df_wid.reset_index()

df_wid = df_wid.sort_values(by=['Entity', 'Year'])

```
:::


::: {.callout-note collapse="true" appearance="minimal"}
### See the prepared WID data

The first 100 rows of the dataframe looks like this:
```{python}
df_wid.head(100)
```

:::

::: {.callout-note collapse="true" appearance="minimal"}
### Save the data
I save the prepared data locally:
```{python}
df_wid.to_csv("data/clean/wid.csv", index=False)
```
:::



